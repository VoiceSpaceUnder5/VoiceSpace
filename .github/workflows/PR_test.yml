name: PR_test
on:
  pull_request:
    branches:
      - master
jobs:
  PR_test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [12.x] # ".x" 로 최신 버전도 사용하고 직접 버전 지정도 가능하다
    steps:
      - name: 풀리퀘 브랜치 헤드로 체크아웃
        uses: actions/checkout@v2
        with:
          ref: "${{ github.event.pull_request.head.sha }}"

      - name: 노드 모듈 캐싱
        uses: actions/cache@v1
        with:
          path: front/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: 노드 모듈 설치
        run: cd front && npm install

      - name: 빌드 테트
        run: cd front && npm run build
        
      - name: 테스트 진행
        run: cd front && npm run test

      - name: 테스트 실패시 동작
        uses: actions/github-script@0.2.0  # github-script 액션을 사용한다.
        with:
          github-token: ${{github.token}}  # github token을 선언해준다
          script: |                        # script에 원하는 스크립트를 작성
            const ref = "${{github.ref}}"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"안녕 인간!! 테스트코드를 다시 확인하려무나",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })
        if: failure()
