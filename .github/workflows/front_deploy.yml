name: FrontEnd-Build-and-Deploy
on:
  #master Branch에서 push 이벤트가 일어났을 때만 실행
  push:
    branches:
      - master #master 브랜치에 push 이벤트가 일어났을 때만 실행
    paths:
      - front/src/** #front/src 디렉토리 내의 변화가 생겼을 때만 실행
jobs:
  FrontEnd-Build-and-Deploy:
    runs-on: ubuntu-18.04
    steps:
      #master 브랜치로 체크아웃
      - name: 레포지토리 체크아웃
        uses: actions/checkout@master

      #노드 모듈을 캐싱하여 package-lock.json이 업데이트 되지 않으면 다음 스탭에서 재설치 하지 않도록
      - name: 노드 모듈 캐싱
        uses: actions/cache@v1
        with:
          path: front/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: 노드 모듈 설치
        run: cd front && npm install

      - name: 소스코드 빌드
        run: cd front && npm run build

      - name: 배포용 폴더 생성
        run: mkdir deploy

      - name: 빌드 폴더 배포용 폴더로 복사
        run: cp -r ./front/build ./deploy/build

      - name: AWS code-deploy 작업명세서 복사
        run: cp ./.code_deploy/front/appspec.yml ./deploy/

      - name: 배포 폴더 전송 전 압축
        run: zip -r ./$GITHUB_SHA.zip ./deploy

      - name: AWS S3로 배포버전 전송
        #AWS IAM 사용자 접속 키/암호 - voiceSpace 레포지토리 secret에 저장해둠
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            ./$GITHUB_SHA.zip s3://under5-github-action-deploy/$GITHUB_WORKFLOW/$GITHUB_SHA.zip

      - name: AWS S3에서 EC2 인스턴스로 배포용 build 전송
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: |
          aws deploy create-deployment \
          --application-name voicespace-frontend-with-githubaction \
          --deployment-group-name voicespace-deploy-with-githubaction-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=under5-github-action-deploy,bundleType=zip,key=$GITHUB_WORKFLOW/$GITHUB_SHA.zip \
          --region ap-northeast-2

      - name: AWS EC2 인스턴스에 쉘명령 전송
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PEM }}
          port: ${{ secrets.SSH_PORT }}
          # 현재 작동중인 프로트앤드 컨테이너의 build 소스코드 업데이트(docker cp 사용)
          # 컨테이너 이름이 vs_frontend가 아니면 실패!! (기존에 있던 리소스는 삭제되지 않음!)
          script: |
            sudo docker cp ~/frontEnd/build/. vs_frontend:/var/www/front
